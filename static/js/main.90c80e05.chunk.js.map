{"version":3,"sources":["components/Header.js","components/Footer.js","components/PopupWithForm.js","components/Input.js","components/ImagePopup.js","utils/Api.js","components/Card.js","components/Main.js","components/App.js","serviceWorker.js","index.js","images/around_the_us.svg"],"names":["Header","className","src","logo","alt","Footer","PopupWithForm","props","name","isOpen","onClick","onClose","title","children","type","value","buttonText","Input","required","id","placeholder","ImagePopup","link","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","statusText","catch","err","console","log","method","body","JSON","stringify","cardId","like","about","avatar","authorization","Card","onCardClick","likes","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","getUserInfo","useEffect","getCardList","forEach","item","push","onEditAvatar","onEditProfile","onAddPlace","map","card","index","key","length","isEditProfileOpen","isAddPlaceOpen","isEditAvatarOpen","isImagePopupOpen","cardName","cardLink","App","setIsEditAvatarOpen","setIsEditProfileOpen","setIsAddPlaceOpen","setIsImagePopupOpen","selectedCardLink","setSelectedCardLink","selectedCardName","setSelectedCardName","e","data","target","currentTarget","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.90c80e05.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/around_the_us.svg';\n\nfunction Header(){\nreturn(            <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt=\"around the USA\" />\n        </header>\n)\n}\nexport default Header","import React from 'react';\n\nfunction Footer(){\n    return(\n            <footer className=\"footer\">\n            <p className=\"footer__copyright\">Â© 2020 Around The U.S.</p>\n        </footer>\n\n    )\n}\n\nexport default Footer","import React from 'react';\n\nfunction PopupWithForm(props){\n    return <section className=\"popout\" >\n        <div className={`popout__container popout__container_${props.name} ${props.isOpen ? \"popout__container_active\" : \"\"}`} onClick={props.onClose}>\n            <button className=\"popout__close-button\" onClick={props.onClose}></button>\n            <form className=\"popout__form\" name={props.name}>\n                <h2 className=\"popout__form-text\">{props.title}</h2>\n                 {props.children}\n                <button className=\"popout__button\" type=\"submit\" value={props.buttonText}>{props.buttonText}</button>\n\n            </form>\n        </div>\n    </section>\n\n}\n\nexport default PopupWithForm\n","import React from 'react';\n\nfunction Input(props){\n    return <>\n        <input required id={props.name} className={`popout__form-input popout__form-input_type_${props.name}`} type=\"text\" name={props.name} placeholder={props.name} />\n        <span id=\"name-error\" className={`popout__form-input-error popout__form-input_type_${props.name}-error`}></span>\n  \n    </>\n}\nexport default Input\n","import React, {useState} from 'react';\n\nfunction ImagePopup(props){\n     return(\n         <section className=\"popout popout_picture-view\">\n            <div className={`popout__container popout__container_picture-view ${props.isOpen ? \"popout__container_active\" : \"\"}`} onClick={props.onClose}>\n                <button className=\"popout__close-button\" onClick={props.onClose}></button>\n                <figure className=\"popout__picture-container\">\n                    <img className=\"popout__picture\" src={props.link} alt={props.name}/>\n                    <figcaption className=\"popout__title\">{props.name}</figcaption> \n                </figure>\n            </div>\n        </section>\n     )\n    \n }\nexport default ImagePopup","class Api{\n    constructor({baseUrl, headers}){\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n    getCardList(){\n        return fetch(this._baseUrl + \"/cards\", {\n            headers: this._headers})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n    }\n    getUserInfo(){\n        return fetch(this._baseUrl + `/users/me`,{\n            headers: this._headers})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n    }\n    \n    addCard({name, link}){\n        return fetch(this._baseUrl + `/cards`,{\n            headers: this._headers,\n            method: \"POST\",\n            body: JSON.stringify({\n                name,\n                link\n            })})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n    }\n    removeCard(cardId){\n        return fetch(this._baseUrl + `/cards/` + cardId ,{\n            headers: this._headers,\n            method: \"DELETE\"})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n    }\n    changeLikeCardStatus(cardId, like){\n        if (like){return fetch(this._baseUrl + `/cards/likes/` + cardId,{\n            headers: this._headers,\n            method: \"PUT\",\n            body: JSON.stringify({\n                like})})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n        } else {return fetch(this._baseUrl + `/cards/likes/` + cardId,{\n            headers: this._headers,\n            method: \"DELETE\"})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n        }\n    }\n    getCardLikeStatus(cardId){\n        return fetch(this._baseUrl + `/cards/likes/` + cardId, {\n            headers: this._headers})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n    };\n\n    setUserInfo({name, about}){\n        return fetch(this._baseUrl + `/users/me`,{\n            headers: this._headers, \n            method: \"PATCH\",\n            body: JSON.stringify({\n                name,\n                about\n              })})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n\n    }\n    setUserAvatar({avatar}){\n        return fetch(this._baseUrl + `/users/me/avatar`,{\n            headers: this._headers,\n            method: \"PATCH\",\n            body: JSON.stringify({avatar})})\n            .then((res) => res.ok? res.json() : Promise.reject(`Error!`+ res.status + res.statusText))\n            .catch((err) => console.log(err))\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-3\", \n    headers: {\n    authorization: \"6be65cf2-723d-4de8-a54b-173b288df7f4\",\n    \"content-type\": \"application/json\"}});\n\nexport default api","import React from 'react';\n\nfunction Card(props){\n        return(\n            <li className=\"gallery__container\">\n                        <img className=\"gallery__image\" src={props.link} alt={props.name} onClick={props.onCardClick}/><button className=\"gallery__trash-button\"></button>\n                        <div className=\"gallery__group\"><h3 className=\"gallery__text\"> {props.name}</h3><div className=\"gallery__like-container\"><button className=\"gallery__like-button\"></button><p className=\"gallery__like-count\">{props.likes}</p></div></div>\n                    </li>\n\n        )\n}\nexport default Card","import React, {useState, useEffect} from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport Input from './Input.js'\nimport ImagePopup from './ImagePopup.js'\nimport api from '../utils/Api.js';\nimport Card from './Card.js';\n\n\nfunction Main(props){\n\n    const [userName, setUserName] = useState(\"\");\n    const [userDescription, setUserDescription] = useState(\"\");\n    const [userAvatar, setUserAvatar] = useState(\"\");\n    const [cards, setCards] = useState([]);\n    api.getUserInfo().then((res)=>{\n        setUserName(res.name)\n        setUserDescription(res.about)\n        setUserAvatar(res.avatar)\n    });\n    useEffect(() => {\n    api.getCardList()\n        .then((res)=>res.forEach((item)=> cards.push(item)));\n        });\n    return(\n        <>\n          <section className=\"profile\">\n            <div className=\"profile__info\">\n                <div className=\"profile__picture_overlay\">\n                    <img className=\"profile__picture\" src={userAvatar} alt={userName} onClick={props.onEditAvatar}/>\n                </div>\n                <div className=\"profile__name-line\">\n                    <h1 className=\"profile__name\">{userName}</h1>  \n                    <button className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n                </div>\n               \n                <p className=\"profile__profession\">{userDescription}</p>\n            </div>\n            <button className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n        </section>\n        \n        <section className=\"gallery\">\n            <ul className=\"gallery__grid\">\n                {cards.map((card, index)=>{\n                return <Card key={index} link={card.link} name={card.name} onCardClick={()=> props.onCardClick(card.link, card.name)} likes={card.likes.length}/>;\n                })}\n            </ul>\n        </section>\n            \n            \n        <PopupWithForm name=\"profile-edit\" title=\"Edit profile\" buttonText=\"Save\" isOpen={props.isEditProfileOpen} onClose={props.onClose}>\n            <Input name=\"name\"/>\n            <Input name=\"profession\"/>\n        </PopupWithForm>\n\n        <PopupWithForm name=\"gallery-add\" title=\"New Place\" buttonText=\"Create\" isOpen={props.isAddPlaceOpen} onClose={props.onClose}>\n            <Input name=\"name\"/>\n            <Input name=\"link\"/>\n        </PopupWithForm>\n\n        <PopupWithForm name=\"picture-change\" title=\"Change profile picture\" buttonText=\"Save\" isOpen={props.isEditAvatarOpen} onClose={props.onClose}>\n            <Input name=\"avatar\"/>\n        </PopupWithForm>\n\n        <PopupWithForm name=\"delete\" title=\"Are you sure?\" buttonText=\"Yes\"/>\n\n        <ImagePopup isOpen={props.isImagePopupOpen} name={props.cardName} link={props.cardLink} onClose={props.onClose}/>\n    </>\n    )\n}\nexport default Main\n","import React, {useState} from 'react';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\n\nfunction App(props){\n    const [isEditAvatarOpen, setIsEditAvatarOpen] = useState(false);\n    const [isEditProfileOpen, setIsEditProfileOpen] = useState(false);\n    const [isAddPlaceOpen, setIsAddPlaceOpen] = useState(false);\n    const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n    const [selectedCardLink, setSelectedCardLink] = useState(\"\");\n    const [selectedCardName, setSelectedCardName] = useState(\"\");\n    \n    function handleCardClick(link, name) {\n        setSelectedCardLink(link);\n        setSelectedCardName(name);\n        setIsImagePopupOpen(true);    \n    }\n    \n    const handleEditAvatarClick = (e) => {\n       setIsEditAvatarOpen(true);\n    }\n    \n    const handleEditProfileClick = (e) =>{\n       setIsEditProfileOpen(true)\n    }\n    \n    const handleAddPlaceClick = (e) => {\n        setIsAddPlaceOpen(true);\n    }\n    const closeAllPopups = (e) => {\n        if(e.target === e.currentTarget)\n            setIsEditAvatarOpen(false);\n            setIsEditProfileOpen(false);\n            setIsAddPlaceOpen(false);\n            setSelectedCardName(\"\");\n            setSelectedCardLink(\"\");\n            setIsImagePopupOpen(false);\n        }\n    \n        return (\n          <div className=\"page\">\n            <div className=\"page__content\">\n                <Header/>\n                <Main \n            onEditProfile={handleEditProfileClick} \n            isEditProfileOpen={isEditProfileOpen} \n            onAddPlace={handleAddPlaceClick} \n            isAddPlaceOpen={isAddPlaceOpen} \n            onEditAvatar={handleEditAvatarClick} \n            isEditAvatarOpen={isEditAvatarOpen}\n            onCardClick={(data) => handleCardClick(data)}\n            cardName={selectedCardName}\n            cardLink={selectedCardLink}\n            isImagePopupOpen={isImagePopupOpen}\n            onClose={closeAllPopups} />\n                <Footer/>\n\n            </div>\n        </div>\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/around_the_us.8f7611ae.svg\";"],"sourceRoot":""}